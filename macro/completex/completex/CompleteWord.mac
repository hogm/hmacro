// 
//  	CompleteWord
//  	Version 3.1  (2009/09/04)
//  	Made by IKKI  http://www18.big.or.jp/~fujiwara/ikki/
// 

$CfgFile = currentmacrodirectory + "\\config.txt";
$TmpDir  = getenv("TEMP") + "\\CompleteWord\\";
$TmpDic  = $TmpDir + "~tmp.dic";
$TmpHint = $TmpDir + "~tmp.hint";
$DmpFile = $TmpDir + "~tmp.dmp";

// #debug = 1;
call Main;
endmacro;

Main:
	call Initialize;
	call Prepare;
	call Listbox;
	call Destroy;
	call Finalize;
	return;

Initialize:
	call LoadDLL;
	call GetType;
	call GetCfgAsPath "word.mix";  $mix = $$return;
	call GetCfg "word.usehint";  if ($$return == "no") $TmpHint = "nul";		// ヒント表示
	call GetCfg "word.live";      #Live  = ($$return == "yes");		// 編集バッファから直接収集
	call GetCfg "word.ahead";     #Ahead = ($$return == "yes");		// カーソル左の文字列に続く単語のみ収集
	call GetCfg "guide";      $guide = $$return;		// 固定ヒント
	call GetCfg "autosave";   #AutoSave  = ($$return == "yes");
	call GetCfg "overwrite";  #Overwrite = ($$return == "yes");
	call GetCfg "wordhas";    $$wordhas  = dllfuncstr("GSUB", $$return, "([\\]\\\\^-])", "\\\\\\1");
	$Start = "[a-z_"    + $$wordhas + "]";
	$Trail = "[a-z0-9_" + $$wordhas + "]*";
	// 対象文字列取得
	if (!selecting) {
		##cc = column;  #ol = lineno;
		$$left = dllfuncstr("MATCHSTR", gettext2(0, lineno, column, lineno), "(" + $Start + $Trail + ")$", "\\1");
		if (#Overwrite) {
			$$right = dllfuncstr("MATCHSTR", gettext2(column, lineno, linelen2, lineno), "^(" + $Trail + ")", "\\1");
		}
	} else if (seltoplineno == selendlineno) {
		##cc = selendcolumn;  #ol = selendlineno;
		$$left = gettext2(seltopcolumn, seltoplineno, selendcolumn, selendlineno, 1);
	} else {
		##cc = seltopcolumn;  #ol = seltoplineno;
	}
	#bc = ##cc - strlen($$left);
	#dc = ##cc + strlen($$right);
	$instr = gettext2(#bc, #ol, ##cc, #ol);
	movetolineno #bc + 1, #ol;  beginsel;  movetolineno #dc + 1, #ol;
	##_ = dllfunc("FILE_CREATEDIR", $TmpDir);
	return;

Finalize:
	##_ = dllfunc("FILE_DELETEFILE", $TmpDir);
	call FreeDLL;
	return;

Prepare:		// テンポラリ辞書作成
	if ($mix != "") {
		##_ = dllfunc("FILE_COPYFILE", $mix, $TmpDic);
		if (!##_) {
			call Error "テンポラリ辞書ファイルが作れません\n"
			 + "同名のファイルやフォルダがあったら削除するか、名前を変更してください\n\n"
			 + "テンポラリ辞書ファイル: " + $TmpDic;
		}
		##_ = dllfunc("FILE_COPYFILE", $mix, $TmpHint);
		if (!##_) {
			call Error "テンポラリヒントファイルが作れません\n"
			 + "同名のファイルやフォルダがあったら削除するか、名前を変更してください\n\n"
			 + "テンポラリヒントファイル: " + $TmpHint;
		}
	} else {
		##_ = dllfunc("FILE_DELETEFILE", $TmpDic);
		##_ = dllfunc("FILE_DELETEFILE", $TmpHint);
	}
	if (#Ahead && $instr != "") {
		$$ptn = dllfuncstr("GSUB", $instr, "([\\\\$()*+.?\\[\\]^{|}])", "\\\\\\1") + $Trail;
	} else {
		$$ptn = $Start + $Trail;
	}
	if (#Live || filename == "" || charset & 0x3f == 5) {		// UTF-7
		call DumpGlobal $DmpFile;
		$$fn = $DmpFile;
	} else {
		if (updated && #AutoSave) save;
		$$fn = filename;
	}
	##_ = dllfunc("COLLECTSTR_SET", "output",  $TmpDic);
	if ($TmpHint != "nul") {
		##_ = dllfunc("COLLECTSTR_SET", "comment", $TmpHint);
	}
	##_ = dllfunc("COLLECTSTR_SETOPT", "word", yes);
	##_ = dllfunc("COLLECTSTR_SETOPT", "CaseSense", no);
	##_ = dllfunc("COLLECTSTR_COLLECT", $$fn, "(" + $$ptn + ")", "\\1\n");
	return;

DumpGlobal:		// 編集バッファをファイルに落とす（カーソル直前の単語を除く）
	// $$1 = 出力先ファイル名
	##ox = x;  ##oy = y;
	left;
	selectword;
	insert " ";
	call DumpAll $$1;
	undo;  undo;
	moveto ##ox, ##oy;
	return;

DumpAll:		// 編集バッファをファイルに落とす
	// $$1 = 出力先ファイル名
	##f = dllfunc("FILE_OPENFILE", $$1, "w");
	##y = 0;
	while (##y < linecount) {
		##_ = dllfunc("FILE_WRITEFILE", gettext(0, ##y, 0, ##y + 4, true), ##f);		// 1行ごとに空行が入る
		##y = ##y + 4;
	}
	##_ = dllfunc("FILE_CLOSEFILE", ##f);
	return;

Destroy:		// テンポラリ辞書削除
	if (!#debug) ##_ = dllfunc("FILE_DELETEFILE", $TmpDic);
	if (!#debug) ##_ = dllfunc("FILE_DELETEFILE", $TmpHint);
	return;

Listbox:		// リストボックス起動
	if ($Type != "plugin") begingroupundo;
	if ($guide != "") $TmpHint = "";	// guide が優先
	$$prmfile = currentmacrodirectory + "\\system\\listbox.param";
	writeinistr $$prmfile, "Parameter", "cfgfile",   $CfgFile;
	writeinistr $$prmfile, "Parameter", "source",    "dic";
	writeinistr $$prmfile, "Parameter", "dic",       $TmpDic;
	writeinistr $$prmfile, "Parameter", "hint",      $TmpHint;
	writeinistr $$prmfile, "Parameter", "guide",     $guide;
	writeinistr $$prmfile, "Parameter", "unsorted",  "overlap";
	writeinistr $$prmfile, "Parameter", "instr",     $instr;
	execmacro currentmacrodirectory + "\\system\\listbox.mac";
	#result  = getininum($$prmfile, "Return", "result");
	$instr   = getinistr($$prmfile, "Return", "instr");
	$basestr = getinistr($$prmfile, "Return", "basestr");
	writeinistr $$prmfile, "Parameter", 0, 0;
	if ($Type != "plugin") endgroupundo;
	if ($Type == "plugin") {		// プラグインへ結果を返す
		writeinistr $CfgFile, "plugin", 0, 0;
		writeininum $CfgFile, "plugin", "result",  #result;
		writeinistr $CfgFile, "plugin", "instr",   "\"" + $instr + "\"";
		writeinistr $CfgFile, "plugin", "basestr", "\"" + $basestr + "\"";
	} else if (#result == 9 || #result == 13 || #result >= 32) {		// 最後に入力された文字を書き込む
		insert char(#result);
	} else if (#result <= -1 && $instr == $basestr) {
		undo;
	}
	return;

//------ 共通サブルーチン ------------------------------------------------------

GetType:		// ファイルタイプを取得
	if (getinistr($CfgFile, "plugin", "type") == "plugin") {
		$Type = "plugin";
	} else if (leftstr(dllfuncstr("WINDOW_GETCLASSNAME", hidemaruhandle(0)), 8) == "TuruKame") {
		$Type = "turukame";
	} else {
		$Type = filetype;
	}
	return;

GetCfgAsPath:		// 設定をファイル名として取得
	// $$1 = キー名
	// $$2 = デフォルト拡張子
	call GetCfg $$1;
	$$v = $$return;
	if ($$v == "" && $$2 != "") {
		$$d = currentmacrodirectory + "\\" + midstr($Type, strstr($Type, ".") + 1, 255) + $$2;
		if (existfile($$d)) return $$d;		// ベースフォルダ\拡張子.$$2 があればそれを返す
	}
	if ($$v == "") return "";
	if (midstr($$v, 1, 2) != ":\\" && leftstr($$v, 2) != "\\\\") {
		$$v = leftstr($CfgFile, dllfunc("STRRSTR", $CfgFile, "\\") + 1) + $$v;		// INI ファイルからの相対パス
	}
	if (!existfile($$v)) {
		call Error "指定されたファイルがありません\n"
		 + $$v + "\n\n"
		 + "設定ファイル: " + $CfgFile;
	}
	return $$v;

GetCfg:		// ファイルタイプ別の設定を取得
	// $CfgFile = INI ファイル名
	// $Type = セクション名
	// $$1 = キー名
	$$t = $Type;
	while ($$t != "") {
		$$v = getinistr($CfgFile, $$t, $$1);
		if ($$v != "") break;
		$$t = getinistr($CfgFile, $$t, "@");
	}
	if ($$v == "") $$v = getinistr($CfgFile, "default", $$1);
	return $$v;

LoadDLL:		// DLL ロード
	if (rightstr(loaddllfile, 13) != "\\macrodll.dll") {
		loaddll currentmacrodirectory + "\\system\\macrodll.dll";
		if (!result) {
			call Error "macrodll.dll がロードできません\n"
			 + "CompleteX を再インストールしてみてください\n\n"
			 + $BaseDir + "system\\macrodll.dll";
		}
		if (!dllfunc("SETHMJREDLL", hidemarudir + "\\HmJre." + "dll")) {
			call Error "HmJre." + "dll が見つかりません\n"
			 + "秀丸エディタを再インストールしてみてください\n"
			 + hidemarudir + "\\HmJre." + "dll";
		}
		#basestat = #basestat | 0x01;
	}
	return;

FreeDLL:		// DLL 解放
	if (#basestat & 0x01) freedll;
	return;

Error:		// エラー処理
	if ($$1 != "") message currentmacrobasename + ":  " + $$1;
	freedll;
	endmacro;

Confirm:		// デバッグ用
	question currentmacrobasename + ":  " + $$1;
	if (!result) { freedll;  endmacro; }
	return;

//  		(C) IKKI <fujiwara@big.jp> 2006-2009

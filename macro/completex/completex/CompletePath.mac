// 
//  	CompletePath
//  	Version 3.1  (2009/09/04)
//  	Made by IKKI  http://www18.big.or.jp/~fujiwara/ikki/
// 

$CfgFile = currentmacrodirectory + "\\config.txt";
$PrmFile = currentmacrodirectory + "\\system\\listbox.param";
$TmpDir  = getenv("TEMP") + "\\CompletePath\\";
$TmpDic  = $TmpDir + "~tmp.dic";

// #debug = 1;
call Main;
endmacro;

Main:
	call Initialize;
	while (##return) {
		call Prepare;
		call Listbox;
	}
	call Destroy;
	call Finalize;
	return;

Initialize:
	call LoadDLL;
	##_ = dllfunc("FILE_CREATEDIR", $TmpDir);
	call GetType;
	// オプション設定取得
	call GetCfg "path.filter";      $PathFilter =  $$return;  if ($PathFilter == "") $PathFilter = "*";
	call GetCfg "path.separator";   $Separator  =  $$return;  if ($Separator  == "") $Separator  = "\\";
	call GetCfg "path.showhidden";  #ShowHidden = ($$return == "yes");
	call GetCfg "path.casechange";  #CaseChange = ($$return == "upper") - ($$return == "lower");
	call GetCfg "overwrite";        #Overwrite  = ($$return == "yes");
	$SepR = "/|\\\\|" + dllfuncstr("GSUB", $Separator, "([\\\\$()*+.?\\[\\]^{|}])", "\\\\\\1");		// セパレータ（正規表現）
	// 対象文字列取得
	if (!selecting) {
		##cc = column;  #ol = lineno;
		$$left = dllfuncstr("MATCHSTR", gettext2(0, lineno, column, lineno), "(([a-z]+:)?([a-z0-9_.!@$%~+-]|" + $SepR + ")*)$", "\\1");		// パス
		if (#Overwrite) {
			$$right = dllfuncstr("MATCHSTR", gettext2(column, lineno, linelen2, lineno), "^(([a-z0-9_.!@$%~+-]|" + $SepR + ")*)", "\\1");
		}
	} else if (seltoplineno == selendlineno) {
		##cc = selendcolumn;  #ol = selendlineno;
		$$left = gettext2(seltopcolumn, seltoplineno, selendcolumn, selendlineno, 1);
	} else {
		##cc = seltopcolumn;  #ol = seltoplineno;
	}
	$path1 = dllfuncstr("MATCHSTR", $$left, "^(.*(" + $SepR + "))", "\\1");		// フォルダ名
	call MapPath $path1;
	$path2 = $$return;
	#bc  = ##cc - strlen($$left);
	##ac = #bc  + strlen($path1);
	#dc  = ##cc + strlen($$right);
	$instr = gettext2(##ac, #ol, ##cc, #ol);
	movetolineno ##ac + 1, #ol;  beginsel;  movetolineno #dc + 1, #ol;
	if ($Type != "plugin") begingroupundo;
	if (#debug) {
		call Confirm "Initialize:\n"
		 + "$$left\t= "      + $$left + "\n"
		 + "$path1\t= "      + $path1 + "\n"
		 + "$path2\t= "      + $path2 + "\n"
		 + "$instr\t= "      + $instr + "\n"
		 + "$PathFilter\t= " + $PathFilter + "\n"
		 + "$Separator \t= " + $Separator + "\n"
		 + "$SepR \t= "      + $SepR + "\n"
		 + "#ShowHidden\t= " + str(#ShowHidden) + "\n"
		 + "#CaseChange\t= " + str(#CaseChange) + "\n"
		 + "#Overwrite\t= "  + str(#Overwrite);
	}
	return true;

Finalize:
	$instr = gettext2(#bc, #ol, column, lineno);
	writeinistr $PrmFile, "Return", "instr", $instr;
	while (#undocount > 0) {
		undo;
		#undocount = #undocount - 1;
	}
	$basestr = gettext2(#bc, #ol, #dc, #ol);
	movetolineno #bc + 1, #ol;  beginsel;  movetolineno #dc + 1, #ol;  endsel;
	insert $instr;
	if ($Type != "plugin") endgroupundo;;
	if ($Type == "plugin") {		// プラグインへ結果を返す
		writeinistr $CfgFile, "plugin", 0, 0;
		writeininum $CfgFile, "plugin", "result", #result;
		writeinistr $CfgFile, "plugin", "instr",  "\"" + $instr + "\"";
		writeinistr $CfgFile, "plugin", "basestr",  "\"" + $basestr + "\"";
	} else if (#result == 9 || #result == 13 || #result >= 32) {		// 最後に入力された文字を書き込む
		insert char(#result);
	} else if (#result <= -1 && $instr == $basestr) {
		undo;
	}
	##_ = dllfunc("FILE_DELETEFILE", $TmpDir);
	call FreeDLL;
	return;

Prepare:		// テンポラリ辞書作成
	##fp = dllfunc("FILE_OPENFILE", $TmpDic, "w");
	if (##fp == 0) {
		call Error "テンポラリ辞書ファイルが作れません\n"
		 + "同名のファイルやフォルダがあったら削除するか、名前を変更してください\n\n"
		 + "テンポラリ辞書ファイル: " + $TmpDic;
	}
	$$folder = dllfuncstr("GSUB", $path2, $SepR, "\\\\");
	if ($PathFilter != "*") {		// フォルダは $PathFilter に関係なく読み込む
		call _EnumPath $$folder, "*", 1, ##fp;
		##count = ##count + ##return;
	}
	##_ = dllfunc("STRING_SPLITSTR", $PathFilter, ";");
	while (dllfunc("STRING_ISMORESPLITSTR")) {
		call _EnumPath $$folder, dllfuncstr("STRING_GETSPLITSTR"), 0, ##fp;
		##count = ##count + ##return;
	}
	if ($path2 == "") {		// 初回はドライブ名も読み込む
		$$drive = dllfuncstr("FILE_GETDRIVES");
		##count = ##count + strlen($$drive);
		$$drive = dllfuncstr("GSUB", $$drive, "(.)", "\\1:" + dllfuncstr("GSUB", $Separator, "\\\\", "\\\\\\\\") + "\n");
		##_ = dllfunc("FILE_WRITEFILE", $$drive, ##fp);
	}
	if (##count > 0) {		// ひとつ上のフォルダ（ドライブルートでは表示したくないんだが…）
		##_ = dllfunc("FILE_WRITEFILE", ".." + $Separator + "\n", ##fp);
	}
	##_ = dllfunc("FILE_CLOSEFILE", ##fp);
	return ##count;

_EnumPath:		// ファイル名書き出し
	// $$1 = パス（最後の \ を含む）
	// $$2 = フィルタ文字列（*.jpg など）
	// ##3 = 0:すべて  1:フォルダのみ
	// ##4 = 書き出し先ファイルハンドル
	$$next = dllfuncstr("FILE_FINDFIRSTFILE", $$1 + $$2);
	while ($$next != "") {
		##attr = dllfunc("FILE_GETFILEATTRIBUTES", $$1 + $$next);
		if (##attr >= 0 && (##3 == 0 || ##attr & 0x10) && (#ShowHidden || (!(##attr & 0x02))) && rightstr($$next, 4) != ".lnk") {
			if      (#CaseChange == -1) $$next = dllfuncstr("TOLOWER", $$next);
			else if (#CaseChange ==  1) $$next = dllfuncstr("TOUPPER", $$next);
			if (##attr & 0x10) $$next = $$next + $Separator;		// フォルダ
			##_ = dllfunc("FILE_WRITEFILE", $$next + "\n", ##4);
			##count = ##count + 1;
			if (##count % 200 == 0) title "読み込み中... " + str(##count) + "個 " + $$next;
		}
		$$next = dllfuncstr("FILE_FINDNEXT");
	}
	##_ = dllfunc("FILE_FINDCLOSE");
	return ##count;

Destroy:		// テンポラリ辞書削除
	if (!#debug) ##_ = dllfunc("FILE_DELETEFILE", $TmpDic);
	return;

Listbox:		// リストボックス起動
	writeinistr $PrmFile, "Parameter", "cfgfile",   $CfgFile;
	writeinistr $PrmFile, "Parameter", "instr",     $instr;
	writeinistr $PrmFile, "Parameter", "source",    "dic";
	writeinistr $PrmFile, "Parameter", "dic",       $TmpDic;
	writeinistr $PrmFile, "Parameter", "hint",      "nul";
	writeinistr $PrmFile, "Parameter", "wordhas",   ".!@$%~+-";
	writeinistr $PrmFile, "Parameter", "unsorted",  "yes";
	writeinistr $PrmFile, "Parameter", "zenkaku",   "yes";
	execmacro currentmacrodirectory + "\\system\\listbox.mac";
	#result  = getininum($PrmFile, "Return", "result");
	$instr   = getinistr($PrmFile, "Return", "instr");
	$path1 = $path1 + $instr;
	$path2 = $path2 + $instr;
	#undocount = #undocount + 2;
	writeinistr $PrmFile, "Parameter", 0, 0;
	if (rightstr($instr, strlen($Separator)) == $Separator) {
		return true;
	}
	return false;

//------ 共通サブルーチン ------------------------------------------------------

MapPath:		// パス読み替え
	// path.mapping=<読替前1>読替後1<読替前2>読替後2...
	$$path = $$1;
	call GetCfg "path.mapping";
	##_ = dllfunc("STRING_SPLITSTR", $$return, "<");
	while (dllfunc("STRING_ISMORESPLITSTR")) {
		$$r = dllfuncstr("STRING_GETSPLITSTR");
		##p = strstr($$r, ">");
		if (##p >= 0 && leftstr($$path, ##p) == leftstr($$r, ##p)) {
			$$path = midstr($$r, ##p + 1, 8192) + midstr($$path, ##p, 8192);
			break;
		}
	}
	return $$path;

GSUBS:		// 文字列置換
	// $$1 = 対象文字列
	// $$2 = 検索文字列
	// $$3 = 置換文字列
	$$s = $$1;
	while (true) {
		##p = strstr($$s, $$2);
		if (##p < 0) break;
		$$r = $$r + leftstr($$s, ##p) + $$3;
		$$s = midstr($$s, ##p + strlen($$2), 8192);
	}
	return $$r + $$s;

GetType:		// ファイルタイプを取得
	if (getinistr($CfgFile, "plugin", "type") == "plugin") {
		$Type = "plugin";
	} else if (leftstr(dllfuncstr("WINDOW_GETCLASSNAME", hidemaruhandle(0)), 8) == "TuruKame") {
		$Type = "turukame";
	} else {
		$Type = filetype;
	}
	return;

GetCfg:		// オプション設定を取得
	// $CfgFile = INI ファイル名
	// $Type = セクション名
	// $$1 = キー名
	$$t = $Type;
	while ($$t != "") {
		$$v = getinistr($CfgFile, $$t, $$1);
		if ($$v != "") break;
		$$t = getinistr($CfgFile, $$t, "@");
	}
	if ($$v == "") $$v = getinistr($CfgFile, "default", $$1);
	return $$v;

LoadDLL:		// DLL ロード
	if (rightstr(loaddllfile, 13) != "\\macrodll.dll") {
		loaddll currentmacrodirectory + "\\system\\macrodll.dll";
		if (!result) {
			call Error "macrodll.dll がロードできません\n"
			 + "CompleteX を再インストールしてみてください\n\n"
			 + $BaseDir + "system\\macrodll.dll";
		}
		if (!dllfunc("SETHMJREDLL", hidemarudir + "\\HmJre." + "dll")) {
			call Error "HmJre." + "dll が見つかりません\n"
			 + "秀丸エディタを再インストールしてみてください\n"
			 + hidemarudir + "\\HmJre." + "dll";
		}
		#basestat = #basestat | 0x01;
	}
	if (dllfunc("GETVERSIONINT") < 8000) {
		call Error "macrodll.dll が古いです\n"
		 + "CompleteX を再インストールしてみてください\n"
		 + "現在のバージョン: " + dllfuncstr("GETVERSIONSTR") + "\n"
		 + "必要なバージョン: 0.80.00";
	}
	return;

FreeDLL:		// DLL 解放
	if (#basestat & 0x01) freedll;
	return;

Error:		// エラー処理
	if ($$1 != "") message currentmacrobasename + ":  " + $$1;
	freedll;
	endmacro;

Confirm:		// デバッグ用
	question currentmacrobasename + ":  " + $$1;
	if (!result) { freedll;  endmacro; }
	return;

//  		(C) IKKI <fujiwara@big.jp> 2006-2009
